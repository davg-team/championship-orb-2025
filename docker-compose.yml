version: '3.9'

services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: 567675675676
    volumes:
      - postgres_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backbone

  keycloak:
    image: quay.io/keycloak/keycloak
    container_name: keycloak
    command: start --http-enabled=true --hostname-strict=false
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin45454545
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: 567675675676
      KC_PROXY_HEADERS: xforwarded
      KC_HOSTNAME: orencode.davg-team.ru
      KC_HTTP_RELATIVE_PATH: /auth

    depends_on:
      - postgres
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backbone


  openbao:
    image: openbao/openbao:latest
    container_name: openbao
    environment:
      OPENBAO_DEV_ROOT_TOKEN_ID: 'root-token-for-dev'
      OPENBAO_DEV_LISTEN_ADDRESS: '0.0.0.0:8200'
      OPENBAO_UI_PROXY_HEADER: 'X-Forwarded-Prefix'
    cap_add:
      - IPC_LOCK
    volumes:
      - ./openbao/config:/openbao/config
      - openbao_data:/openbao/data
      - ./openbao/logs:/openbao/logs
    command: server -dev -dev-root-token-id="root-token-for-dev"
    healthcheck:
      test: ["CMD", "wget", "--spider", "--proxy", "off", "http://localhost:8200/v1/sys/health"]
      interval: 10s
      timeout: 3s
      retries: 3
    networks:
      - backbone
      - openbao-network

  postgres-backend:
    image: postgres:15
    container_name: postgres-backend
    environment:
      POSTGRES_USER: backend_user
      POSTGRES_PASSWORD: your-password
      POSTGRES_DB: backend
    volumes:
      - postgres_backend_data:/var/lib/postgresql/data
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backbone

  # nginx
  frontend-build:
    build:
      context: ./frontend
    container_name: frontend-build
    volumes:
      - ./frontend/dist:/frontend/dist:rw
    command: ["sh", "-c", "cp -r /dist /frontend/dist && sleep infinity"]
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backbone

  nginx:
    build:
      context: ./router
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - frontend-build
      - keycloak
      - openbao
    volumes:
      - ./frontend/dist:/frontend/dist
      - ./router/nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./certs:/etc/nginx/certs:ro
      - /etc/letsencrypt:/etc/letsencrypt:ro
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    networks:
      - backbone

  # Uncomment if needed
  # service1:
  #   build:
  #     context: ./service1
  #   container_name: service1
  #   ports:
  #     - "8001:8000"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #   networks:
  #     - backbone

  # service2:
  #   build:
  #     context: ./service2
  #   container_name: service2
  #   ports:
  #     - "8002:8000"
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #   networks:
  #     - backbone

  # databases
  # postgres:
  #   image: postgres
  #   container_name: postgres
  #   environment:
  #     POSTGRES_USER: user
  #     POSTGRES_PASSWORD: password
  #     POSTGRES_DB: mydatabase
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #   networks:
  #     - backbone

  # mongodb:
  #   image: mongo
  #   container_name: mongodb
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: root
  #     MONGO_INITDB_ROOT_PASSWORD: example
  #   ports:
  #     - "27017:27017"
  #   volumes:
  #     - mongo_data:/data/db
  #   logging:
  #     driver: "json-file"
  #     options:
  #       max-size: "10m"
  #       max-file: "3"
  #   networks:
  #     - backbone

networks:
  backbone:
    driver: bridge

  openbao-network:
    driver: bridge

volumes:
  postgres_data:
  postgres_backend_data:
  openbao_data: